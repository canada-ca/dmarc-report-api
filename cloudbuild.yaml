steps:

  - name: node:alpine
    id: install
    dir: api-js
    entrypoint: npm
    args: ['ci', '--no-optional']

  - name: node:alpine
    id: lint
    dir: api-js
    entrypoint: npm
    args: ['run', lint]

  - name: node:alpine
    id: test
    dir: api-js
    entrypoint: npm
    args: ['test']
    env:
      - AZURE_CONN_STRING=""
      - DATABASE=""
      - SUMMARIES_CONTAINER=""
      - API_CONTAINER=""
      - SUPER_ADMIN_TOKEN=""
      - TOKEN_HASH=""
      - DMARC_REPORT_API_TOKEN=""
      - DMARC_REPORT_API_SECRET=$_DMARC_REPORT_API_SECRET

  - name: 'gcr.io/cloud-builders/docker'
    id: build-if-master
    entrypoint: 'bash'
    dir: .
    args:
    - '-c'
    - |
      if [[ "$BRANCH_NAME" == "master" ]]
      then
        docker build -t gcr.io/$PROJECT_ID/dmarc-report-api:$BRANCH_NAME-$SHORT_SHA .
      else
        exit 0
      fi

  - name: 'gcr.io/cloud-builders/docker'
    id: push-if-master
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      if [[ "$BRANCH_NAME" == "master" ]]
      then
        docker push gcr.io/$PROJECT_ID/dmarc-report-api:$BRANCH_NAME-$SHORT_SHA
      else
        exit 0
      fi
      
  - name: 'gcr.io/cloud-builders/gcloud'
    id: push-to-cloud-run-if-master
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      if [[ "$BRANCH_NAME" == "master" ]]
      then
        gcloud run deploy dmarc-report-api --image gcr.io/$PROJECT_ID/dmarc-report-api:$BRANCH_NAME-$SHORT_SHA --region northamerica-northeast1 --platform managed
      else
        exit 0
      fi