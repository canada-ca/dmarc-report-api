steps:
  - name: 'gcr.io/track-compliance/ci'
    id: install
    dir: .
    entrypoint: pipenv
    args: ['sync', '-d', '--bare']
    env:
      - PIPENV_NOSPIN=TRUE

  - name: 'gcr.io/track-compliance/ci'
    id: test
    dir: .
    entrypoint: pipenv
    args: ['run', 'test']
    env:
      - AZURE_DOMAIN=$_AZURE_DOMAIN
      - AZURE_ENDPOINT=$_AZURE_ENDPOINT
      - AZURE_KEY=$_AZURE_KEY
      - ACCOUNT=$_ACCOUNT
      - DATABASE=$_DATABASE
      - RECORD_CONTAINER=$_RECORD_CONTAINER
      - SUMMARIES_CONTAINER=$_SUMMARIES_CONTAINER
      - IP_ENRICHMENT_CONTAINER=$_IP_ENRICHMENT_CONTAINER
      - SPOOFING_CAMPAIGNS=$_SPOOFING_CAMPAIGNS
      - TOKEN=$_TOKEN
      - JWT_SECRET=$_JWT_SECRET

  - name: 'gcr.io/cloud-builders/docker'
    id: build-if-master
    entrypoint: 'bash'
    dir: .
    args:
    - '-c'
    - |
      if [["$BRANCH_NAME" == "master"]]
      then
        docker build -t gcr.io/$PROJECT_ID/dmarc-report-api:$BRANCH_NAME-$SHORT_SHA .
      else
        exit 0
      fi

  - name: 'gcr.io/cloud-builders/docker'
    id: push-if-master
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      if [["$BRANCH_NAME" == "master"]]
      then
        docker push gcr.io/$PROJECT_ID/dmarc-report-api:$BRANCH_NAME-$SHORT_SHA
      else
        exit 0
      fi
